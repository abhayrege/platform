package in.safety.domain;
// Generated Jul 21, 2017 11:15:05 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * JseekerMaster generated by hbm2java
 */
@Entity
@Table(name = "JSEEKER_MASTER", catalog = "SafetyDB")
public class JseekerMaster implements java.io.Serializable {

	private Integer idJseekerMaster;
	private AcademicCourses academicCourses;
	private String jseekerName;
	private String profileTitle;
	private String currentEmployment;
	private Integer totalExperience;
	private String preferredLocationCity;
	private Date dob;
	private String functionalArea;
	private String maritalStatus;
	private String keySkills;
	private String profileSummary;
	private byte[] jseekerSnap;
	private byte[] jseekerResume;
	private Date createdDate;
	private Date lastModifiedDate;
	private String jseekerAddr1;
	private String jseekerAddr2;
	private String jseekerCity;
	private String jseekerState;
	private String jseekerPincode;
	private String jseekerCountry;
	private Byte cellPhone;
	private String email;
	private String phoneVerificationCode;
	private String emailVerificationCode;
	private String phoneVerified;
	private String emailVerified;
	private Set skillExperiences = new HashSet(0);
	private Set jseekerEmploymentDetailses = new HashSet(0);
	private Set jobPostingJseekers = new HashSet(0);

	public JseekerMaster() {
	}

	public JseekerMaster(String jseekerName) {
		this.jseekerName = jseekerName;
	}

	public JseekerMaster(AcademicCourses academicCourses, String jseekerName, String profileTitle,
			String currentEmployment, Integer totalExperience, String preferredLocationCity, Date dob,
			String functionalArea, String maritalStatus, String keySkills, String profileSummary, byte[] jseekerSnap,
			byte[] jseekerResume, Date createdDate, Date lastModifiedDate, String jseekerAddr1, String jseekerAddr2,
			String jseekerCity, String jseekerState, String jseekerPincode, String jseekerCountry, Byte cellPhone,
			String email, String phoneVerificationCode, String emailVerificationCode, String phoneVerified,
			String emailVerified, Set skillExperiences, Set jseekerEmploymentDetailses, Set jobPostingJseekers) {
		this.academicCourses = academicCourses;
		this.jseekerName = jseekerName;
		this.profileTitle = profileTitle;
		this.currentEmployment = currentEmployment;
		this.totalExperience = totalExperience;
		this.preferredLocationCity = preferredLocationCity;
		this.dob = dob;
		this.functionalArea = functionalArea;
		this.maritalStatus = maritalStatus;
		this.keySkills = keySkills;
		this.profileSummary = profileSummary;
		this.jseekerSnap = jseekerSnap;
		this.jseekerResume = jseekerResume;
		this.createdDate = createdDate;
		this.lastModifiedDate = lastModifiedDate;
		this.jseekerAddr1 = jseekerAddr1;
		this.jseekerAddr2 = jseekerAddr2;
		this.jseekerCity = jseekerCity;
		this.jseekerState = jseekerState;
		this.jseekerPincode = jseekerPincode;
		this.jseekerCountry = jseekerCountry;
		this.cellPhone = cellPhone;
		this.email = email;
		this.phoneVerificationCode = phoneVerificationCode;
		this.emailVerificationCode = emailVerificationCode;
		this.phoneVerified = phoneVerified;
		this.emailVerified = emailVerified;
		this.skillExperiences = skillExperiences;
		this.jseekerEmploymentDetailses = jseekerEmploymentDetailses;
		this.jobPostingJseekers = jobPostingJseekers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID_JSEEKER_MASTER", unique = true, nullable = false)
	public Integer getIdJseekerMaster() {
		return this.idJseekerMaster;
	}

	public void setIdJseekerMaster(Integer idJseekerMaster) {
		this.idJseekerMaster = idJseekerMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "HIGHEST_QUALIFICATION")
	public AcademicCourses getAcademicCourses() {
		return this.academicCourses;
	}

	public void setAcademicCourses(AcademicCourses academicCourses) {
		this.academicCourses = academicCourses;
	}

	@Column(name = "JSEEKER_NAME", nullable = false, length = 200)
	public String getJseekerName() {
		return this.jseekerName;
	}

	public void setJseekerName(String jseekerName) {
		this.jseekerName = jseekerName;
	}

	@Column(name = "PROFILE_TITLE", length = 300)
	public String getProfileTitle() {
		return this.profileTitle;
	}

	public void setProfileTitle(String profileTitle) {
		this.profileTitle = profileTitle;
	}

	@Column(name = "CURRENT_EMPLOYMENT", length = 200)
	public String getCurrentEmployment() {
		return this.currentEmployment;
	}

	public void setCurrentEmployment(String currentEmployment) {
		this.currentEmployment = currentEmployment;
	}

	@Column(name = "TOTAL_EXPERIENCE")
	public Integer getTotalExperience() {
		return this.totalExperience;
	}

	public void setTotalExperience(Integer totalExperience) {
		this.totalExperience = totalExperience;
	}

	@Column(name = "PREFERRED_LOCATION_CITY", length = 100)
	public String getPreferredLocationCity() {
		return this.preferredLocationCity;
	}

	public void setPreferredLocationCity(String preferredLocationCity) {
		this.preferredLocationCity = preferredLocationCity;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOB", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "FUNCTIONAL_AREA", length = 100)
	public String getFunctionalArea() {
		return this.functionalArea;
	}

	public void setFunctionalArea(String functionalArea) {
		this.functionalArea = functionalArea;
	}

	@Column(name = "MARITAL_STATUS", length = 45)
	public String getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@Column(name = "KEY_SKILLS", length = 300)
	public String getKeySkills() {
		return this.keySkills;
	}

	public void setKeySkills(String keySkills) {
		this.keySkills = keySkills;
	}

	@Column(name = "PROFILE_SUMMARY", length = 500)
	public String getProfileSummary() {
		return this.profileSummary;
	}

	public void setProfileSummary(String profileSummary) {
		this.profileSummary = profileSummary;
	}

	@Column(name = "JSEEKER_SNAP")
	public byte[] getJseekerSnap() {
		return this.jseekerSnap;
	}

	public void setJseekerSnap(byte[] jseekerSnap) {
		this.jseekerSnap = jseekerSnap;
	}

	@Column(name = "JSEEKER_RESUME")
	public byte[] getJseekerResume() {
		return this.jseekerResume;
	}

	public void setJseekerResume(byte[] jseekerResume) {
		this.jseekerResume = jseekerResume;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CREATED_DATE", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_MODIFIED_DATE", length = 10)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@Column(name = "JSEEKER_ADDR1", length = 100)
	public String getJseekerAddr1() {
		return this.jseekerAddr1;
	}

	public void setJseekerAddr1(String jseekerAddr1) {
		this.jseekerAddr1 = jseekerAddr1;
	}

	@Column(name = "JSEEKER_ADDR2", length = 100)
	public String getJseekerAddr2() {
		return this.jseekerAddr2;
	}

	public void setJseekerAddr2(String jseekerAddr2) {
		this.jseekerAddr2 = jseekerAddr2;
	}

	@Column(name = "JSEEKER_CITY", length = 50)
	public String getJseekerCity() {
		return this.jseekerCity;
	}

	public void setJseekerCity(String jseekerCity) {
		this.jseekerCity = jseekerCity;
	}

	@Column(name = "JSEEKER_STATE", length = 50)
	public String getJseekerState() {
		return this.jseekerState;
	}

	public void setJseekerState(String jseekerState) {
		this.jseekerState = jseekerState;
	}

	@Column(name = "JSEEKER_PINCODE", length = 10)
	public String getJseekerPincode() {
		return this.jseekerPincode;
	}

	public void setJseekerPincode(String jseekerPincode) {
		this.jseekerPincode = jseekerPincode;
	}

	@Column(name = "JSEEKER_COUNTRY", length = 45)
	public String getJseekerCountry() {
		return this.jseekerCountry;
	}

	public void setJseekerCountry(String jseekerCountry) {
		this.jseekerCountry = jseekerCountry;
	}

	@Column(name = "CELL_PHONE")
	public Byte getCellPhone() {
		return this.cellPhone;
	}

	public void setCellPhone(Byte cellPhone) {
		this.cellPhone = cellPhone;
	}

	@Column(name = "EMAIL", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PHONE_VERIFICATION_CODE", length = 200)
	public String getPhoneVerificationCode() {
		return this.phoneVerificationCode;
	}

	public void setPhoneVerificationCode(String phoneVerificationCode) {
		this.phoneVerificationCode = phoneVerificationCode;
	}

	@Column(name = "EMAIL_VERIFICATION_CODE", length = 200)
	public String getEmailVerificationCode() {
		return this.emailVerificationCode;
	}

	public void setEmailVerificationCode(String emailVerificationCode) {
		this.emailVerificationCode = emailVerificationCode;
	}

	@Column(name = "PHONE_VERIFIED", length = 45)
	public String getPhoneVerified() {
		return this.phoneVerified;
	}

	public void setPhoneVerified(String phoneVerified) {
		this.phoneVerified = phoneVerified;
	}

	@Column(name = "EMAIL_VERIFIED", length = 45)
	public String getEmailVerified() {
		return this.emailVerified;
	}

	public void setEmailVerified(String emailVerified) {
		this.emailVerified = emailVerified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jseekerMaster")
	public Set getSkillExperiences() {
		return this.skillExperiences;
	}

	public void setSkillExperiences(Set skillExperiences) {
		this.skillExperiences = skillExperiences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jseekerMaster")
	public Set getJseekerEmploymentDetailses() {
		return this.jseekerEmploymentDetailses;
	}

	public void setJseekerEmploymentDetailses(Set jseekerEmploymentDetailses) {
		this.jseekerEmploymentDetailses = jseekerEmploymentDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jseekerMaster")
	public Set getJobPostingJseekers() {
		return this.jobPostingJseekers;
	}

	public void setJobPostingJseekers(Set jobPostingJseekers) {
		this.jobPostingJseekers = jobPostingJseekers;
	}

}
